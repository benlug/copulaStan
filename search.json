[{"path":"https://benlug.github.io/copulaStan/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 copulaStan authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://benlug.github.io/copulaStan/articles/copulaStan-intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"copulaStan: Fitting Bivariate Gaussian and Clayton Copulas","text":"vignette, demonstrate fit bivariate Gaussian copula models using copulaStan package. provide examples fitting Gaussian copula models different types marginals, including normal, lognormal distributions.","code":""},{"path":"https://benlug.github.io/copulaStan/articles/copulaStan-intro.html","id":"example-gaussian-copula-with-normal-and-lognormal-marginals","dir":"Articles","previous_headings":"Introduction","what":"Example: Gaussian Copula with Normal and Lognormal Marginals","title":"copulaStan: Fitting Bivariate Gaussian and Clayton Copulas","text":"","code":"library(copulaStan) library(copula)  seed <- 2024 set.seed(seed) true_rho <- 0.5 n <- 2000    margins <- c(\"norm\", \"lnorm\") params <- list(list(mean = 0.8, sd = 2), list(meanlog = 0, sdlog = 0.8)) cop <- normalCopula(param = true_rho, dim = 2) mvdc_copula <- mvdc(cop, margins = margins, paramMargins = params) data <- rMvdc(n, mvdc_copula)  fit <- fit_bivariate_copula(data, copula = \"gaussian\", marginals = c(\"normal\", \"lognormal\"),                              iter = 4000, chains = 4, warmup = 2000,                             seed = seed, cores = 4) fit"},{"path":"https://benlug.github.io/copulaStan/articles/copulaStan-intro.html","id":"example-clayton-copula-with-normal-and-lognormal-marginals","dir":"Articles","previous_headings":"Introduction","what":"Example: Clayton Copula with Normal and Lognormal Marginals","title":"copulaStan: Fitting Bivariate Gaussian and Clayton Copulas","text":"","code":"library(copulaStan) library(copula)  seed <- 2024 set.seed(seed) true_theta <- 2.0 n <- 2000    margins <- c(\"norm\", \"lnorm\") params <- list(list(mean = 0.8, sd = 2), list(meanlog = 0, sdlog = 0.8)) cop <- claytonCopula(param = true_theta, dim = 2) mvdc_copula <- mvdc(cop, margins = margins, paramMargins = params) data <- rMvdc(n, mvdc_copula)  fit <- fit_bivariate_copula(data, copula = \"clayton\", marginals = c(\"normal\", \"lognormal\"),                              iter = 4000, chains = 4, warmup = 2000,                             seed = seed, cores = 4) fit"},{"path":"https://benlug.github.io/copulaStan/articles/copulaStan-intro.html","id":"derivation-of-gaussian-copula-log-likelihood","dir":"Articles","previous_headings":"Introduction","what":"Derivation of Gaussian Copula Log Likelihood","title":"copulaStan: Fitting Bivariate Gaussian and Clayton Copulas","text":"derivation Gaussian copula likelihood implemented package. Transformation Uniform Marginals: \\[ U_1 = F_1(X_1), \\quad U_2 = F_2(X_2) \\] \\(F_1\\) \\(F_2\\) CDFs marginals. Transformation Standard Normal: \\[ Z_1 = \\Phi^{-1}(U_1), \\quad Z_2 = \\Phi^{-1}(U_2) \\] \\(\\Phi^{-1}\\) inverse CDF standard normal distribution. Bivariate Normal Density: \\[ \\phi_{\\rho}(z_1, z_2) = \\frac{1}{2\\pi\\sqrt{1-\\rho^2}} \\exp\\left( -\\frac{1}{2(1-\\rho^2)}(z_1^2 + z_2^2 - 2\\rho z_1 z_2) \\right) \\] Standard Normal Marginal Density: \\[ \\phi(z) = \\frac{1}{\\sqrt{2\\pi}} \\exp\\left( -\\frac{z^2}{2} \\right) \\] Copula Density: \\[ c(u_1, u_2; \\rho) = \\frac{\\phi_{\\rho}(z_1, z_2)}{\\phi(z_1) \\phi(z_2)} \\] Substituting expressions \\(\\phi_{\\rho}\\) \\(\\phi\\): \\[ c(u_1, u_2; \\rho) = \\frac{\\frac{1}{2\\pi\\sqrt{1-\\rho^2}} \\exp\\left( -\\frac{1}{2(1-\\rho^2)}(z_1^2 + z_2^2 - 2\\rho z_1 z_2) \\right)}{\\left( \\frac{1}{\\sqrt{2\\pi}} \\exp\\left( -\\frac{z_1^2}{2} \\right) \\right) \\left( \\frac{1}{\\sqrt{2\\pi}} \\exp\\left( -\\frac{z_2^2}{2} \\right) \\right)} \\] Simplifying, get: \\[ c(u_1, u_2; \\rho) = \\frac{1}{\\sqrt{1-\\rho^2}} \\exp\\left( -\\frac{1}{2(1-\\rho^2)}(z_1^2 + z_2^2 - 2\\rho z_1 z_2) + \\frac{z_1^2}{2} + \\frac{z_2^2}{2} \\right) \\] Log Likelihood: \\[ \\log c(u_1, u_2; \\rho) = -\\frac{1}{2} \\log(1-\\rho^2) + \\frac{\\rho z_1 z_2 - \\rho^2 (z_1^2 + z_2^2)}{2(1-\\rho^2)} \\]","code":""},{"path":"https://benlug.github.io/copulaStan/articles/copulaStan-intro.html","id":"derivation-of-clayton-copula-log-likelihood","dir":"Articles","previous_headings":"Introduction","what":"Derivation of Clayton Copula Log Likelihood","title":"copulaStan: Fitting Bivariate Gaussian and Clayton Copulas","text":"derivation Clayton copula likelihood implemented package. Clayton copula defined : \\[ C(u, v; \\theta) = \\left(u^{-\\theta} + v^{-\\theta} - 1\\right)^{-\\frac{1}{\\theta}} \\] \\(\\theta > 0\\). copula density function \\(c(u, v; \\theta)\\) obtained differentiating copula function: \\[ c(u, v; \\theta) = \\frac{\\partial^2 C(u, v; \\theta)}{\\partial u \\partial v} \\] First, differentiate \\(C(u, v; \\theta)\\) respect \\(u\\): \\[ \\frac{\\partial C(u, v; \\theta)}{\\partial u} = \\frac{\\partial}{\\partial u} \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right)^{-\\frac{1}{\\theta}} \\] \\[ = -\\frac{1}{\\theta} \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right)^{-\\frac{1}{\\theta} - 1} \\cdot (-\\theta) u^{-\\theta - 1} \\] \\[ = u^{-\\theta - 1} \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right)^{-\\frac{1}{\\theta} - 1} \\] Next, differentiate result respect \\(v\\): \\[ \\frac{\\partial^2 C(u, v; \\theta)}{\\partial u \\partial v} = \\frac{\\partial}{\\partial v} \\left( u^{-\\theta - 1} \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right)^{-\\frac{1}{\\theta} - 1} \\right) \\] \\[ = u^{-\\theta - 1} \\cdot \\left( -\\frac{1}{\\theta} - 1 \\right) \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right)^{-\\frac{1}{\\theta} - 2} \\cdot (-\\theta) v^{-\\theta - 1} \\] \\[ = (\\theta + 1) u^{-\\theta - 1} v^{-\\theta - 1} \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right)^{-\\frac{1}{\\theta} - 2} \\] Therefore, Clayton copula density function : \\[ c(u, v; \\theta) = (\\theta + 1) u^{-\\theta - 1} v^{-\\theta - 1} \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right)^{-\\frac{1}{\\theta} - 2} \\] Taking natural logarithm, get log likelihood: \\[ \\log c(u, v; \\theta) = \\log(\\theta + 1) + (-\\theta - 1) (\\log u + \\log v) + \\left( -\\frac{1}{\\theta} - 2 \\right) \\log \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right) \\] \\[ = \\log(\\theta + 1) + (-\\theta - 1) (\\log u + \\log v) - \\left( \\frac{2\\theta + 1}{\\theta} \\right) \\log \\left( u^{-\\theta} + v^{-\\theta} - 1 \\right) \\] Thus, log likelihood Clayton copula : \\[ \\log c(u, v; \\theta) = \\log(1 + \\theta) + (-\\theta - 1) (\\log u + \\log v) - \\frac{2\\theta + 1}{\\theta} \\log (u^{-\\theta} + v^{-\\theta} - 1) \\]","code":""},{"path":"https://benlug.github.io/copulaStan/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benedikt Lugauer. Author, maintainer.","code":""},{"path":"https://benlug.github.io/copulaStan/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lugauer B (2024). copulaStan: Fit Bivariate Gaussian Clayton Copula Models Using Stan. R package version 0.3.1, https://benlug.github.io/copulaStan/.","code":"@Manual{,   title = {copulaStan: Fit Bivariate Gaussian and Clayton Copula Models Using Stan},   author = {Benedikt Lugauer},   year = {2024},   note = {R package version 0.3.1},   url = {https://benlug.github.io/copulaStan/}, }"},{"path":"https://benlug.github.io/copulaStan/index.html","id":"copulastan-","dir":"","previous_headings":"","what":"Fit Bivariate Gaussian and Clayton Copula Models Using Stan","title":"Fit Bivariate Gaussian and Clayton Copula Models Using Stan","text":"copulaStan package provides functions fit bivariate Gaussian Clayton copula models using Stan. models can handle normal non-normal marginals.","code":""},{"path":"https://benlug.github.io/copulaStan/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit Bivariate Gaussian and Clayton Copula Models Using Stan","text":"can install development version copulaStan GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"benlug/copulaStan\")"},{"path":"https://benlug.github.io/copulaStan/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fit Bivariate Gaussian and Clayton Copula Models Using Stan","text":"basic example shows fit bivariate Gaussian copula model: example fitting bivariate Clayton copula model:","code":"library(copula) library(copulaStan)  set.seed(123) true_rho <- 0.5 n <- 1000  margins <- c(\"norm\", \"norm\") params <- list(list(mean = 0, sd = 1), list(mean = 0, sd = 1)) cop <- normalCopula(param = true_rho, dim = 2) mvdc_copula <- mvdc(cop, margins = margins, paramMargins = params) U <- rMvdc(n, mvdc_copula)  fit <- fit_bivariate_copula(U, copula = \"gaussian\", marginals = margins,                              seed = 123) fit library(copula) library(copulaStan)  seed <- 2024 set.seed(seed) true_theta <- 2.0 n <- 2000    margins <- c(\"norm\", \"lnorm\") params <- list(list(mean = 0.8, sd = 2), list(meanlog = 0, sdlog = 0.8)) cop <- claytonCopula(param = true_theta, dim = 2) mvdc_copula <- mvdc(cop, margins = margins, paramMargins = params) data <- rMvdc(n, mvdc_copula)  fit <- fit_bivariate_copula(data, copula = \"clayton\", marginals = margins,                             seed = seed) fit"},{"path":"https://benlug.github.io/copulaStan/reference/fit_bivariate_copula.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bivariate Copula Model with Optional Marginal Parameter Estimation — fit_bivariate_copula","title":"Fit Bivariate Copula Model with Optional Marginal Parameter Estimation — fit_bivariate_copula","text":"`fit_bivariate_copula` function fits bivariate copula model data optional marginal parameter estimation. supports Gaussian Clayton copulas, allows specifying normal lognormal marginal distributions variable. function utilizes Stan Bayesian inference, offering flexible control sampling process.","code":""},{"path":"https://benlug.github.io/copulaStan/reference/fit_bivariate_copula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bivariate Copula Model with Optional Marginal Parameter Estimation — fit_bivariate_copula","text":"","code":"fit_bivariate_copula(   U,   copula,   marginals = NULL,   iter = 2000,   chains = 4,   warmup = 1000,   thin = 1,   seed = NULL,   control = list(adapt_delta = 0.8, max_treedepth = 10),   cores = 1 )"},{"path":"https://benlug.github.io/copulaStan/reference/fit_bivariate_copula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bivariate Copula Model with Optional Marginal Parameter Estimation — fit_bivariate_copula","text":"U Data matrix observed marginals, two variables. copula type copula fit. Options \"gaussian\" \"clayton\". marginals list specifying marginal distributions variable. Options \"normal\" \"lognormal\". iter Number iterations chain. Default 2000. chains Number chains. Default 4. warmup Number warmup iterations per chain. Default 1000. thin Thinning rate. Default 1. seed Random seed. Default NULL. control list parameters control sampler's behavior. Default list(adapt_delta = 0.95, max_treedepth = 10). cores Number cores use parallel processing. Default 1.","code":""},{"path":"https://benlug.github.io/copulaStan/reference/fit_bivariate_copula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Bivariate Copula Model with Optional Marginal Parameter Estimation — fit_bivariate_copula","text":"list containing: fit fitted Stan model object.","code":""},{"path":"https://benlug.github.io/copulaStan/reference/fit_bivariate_copula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bivariate Copula Model with Optional Marginal Parameter Estimation — fit_bivariate_copula","text":"","code":"if (FALSE) { library(copulaStan) library(copula)  seed <- 2024 set.seed(seed) true_rho <- 0.5 n <- 2000  margins <- c(\"norm\", \"lnorm\") params <- list(list(mean = 0.8, sd = 2), list(meanlog = 0, sdlog = 0.8)) cop <- normalCopula(param = true_rho, dim = 2) mvdc_copula <- mvdc(cop, margins = margins, paramMargins = params) data <- rMvdc(n, mvdc_copula)  fit <- fit_bivariate_copula(data, copula = \"gaussian\", marginals = c(\"normal\", \"lognormal\"),                             iter = 4000, chains = 4, warmup = 2000,                             seed = seed, cores = 4) }"},{"path":[]},{"path":"https://benlug.github.io/copulaStan/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"copulaStan 0.3.1","text":"Unified copula functions single fit_bivariate_copula function.","code":""},{"path":[]},{"path":"https://benlug.github.io/copulaStan/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"copulaStan 0.3.0","text":"Supports marginals: “normal”, “lognormal”. Included vignette","code":""},{"path":[]},{"path":"https://benlug.github.io/copulaStan/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"copulaStan 0.2.0","text":"Added functions fit Clayton copula models. Improved documentation","code":""},{"path":[]},{"path":"https://benlug.github.io/copulaStan/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"copulaStan 0.1.0","text":"Introduced package basic functionality fit bivariate Gaussian copula models. Added initial documentation examples usage.","code":""}]
