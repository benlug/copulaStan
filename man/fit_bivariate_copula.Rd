% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_bivariate_copula.R
\name{fit_bivariate_copula}
\alias{fit_bivariate_copula}
\title{Fit Bivariate Copula Model with Optional Marginal Parameter Estimation}
\usage{
fit_bivariate_copula(
  U,
  copula,
  marginals,
  iter = 2000,
  chains = 4,
  warmup = 1000,
  thin = 1,
  seed = NULL,
  control = list(adapt_delta = 0.8, max_treedepth = 10),
  cores = 1
)
}
\arguments{
\item{U}{Data matrix of observed marginals, with two variables.}

\item{copula}{The type of copula to fit. Options are "gaussian", "clayton", and "joe".}

\item{marginals}{A list specifying the marginal distributions for each variable. Options are "normal", "lognormal", "exponential", and "beta".}

\item{iter}{Number of iterations for each chain. Default is 2000.}

\item{chains}{Number of chains. Default is 4.}

\item{warmup}{Number of warmup iterations per chain. Default is 1000.}

\item{thin}{Thinning rate. Default is 1.}

\item{seed}{Random seed. Default is NULL.}

\item{control}{A list of parameters to control the sampler's behavior. Default is list(adapt_delta = 0.8, max_treedepth = 10).}

\item{cores}{Number of cores to use for parallel processing. Default is 1.}
}
\value{
A list containing:
\describe{
  \item{\code{fit}}{Stan model object.}
}
}
\description{
The `fit_bivariate_copula` function fits a bivariate copula model to data with optional marginal parameter estimation.
It supports Gaussian, Clayton, and Joe copulas, and allows for specifying normal, lognormal, exponential, or beta marginal distributions for each variable.
This function utilizes Stan for Bayesian inference.
}
\examples{
\dontrun{
library(copulaStan)
library(copula)

seed <- 2024
set.seed(seed)
true_rho <- 0.5
n <- 2000

margins <- c("norm", "lnorm")
params <- list(list(mean = 0.8, sd = 2), list(meanlog = 0, sdlog = 0.8))
cop <- normalCopula(param = true_rho, dim = 2)
mvdc_copula <- mvdc(cop, margins = margins, paramMargins = params)
data <- rMvdc(n, mvdc_copula)

fit <- fit_bivariate_copula(data,
                            copula = "gaussian", marginals = c("normal", "lognormal"),
                            seed = seed)
}

}
